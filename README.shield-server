# Rust Web Server

A simple RESTful API server built with Rust, Actix Web, and PostgreSQL.

## Features

- RESTful API endpoints for CRUD operations on items
- Request logging to PostgreSQL database
- Reporting functionality with filterable logs
- Middleware for request handling

## Prerequisites

- Rust (2024 edition or later)
- PostgreSQL
- Environment variables set up in `.env` file

## Dependencies

- [actix-web](https://crates.io/crates/actix-web) - Web framework
- [sqlx](https://crates.io/crates/sqlx) - SQL toolkit with PostgreSQL support
- [chrono](https://crates.io/crates/chrono) - Date/time functionality
- [serde](https://crates.io/crates/serde) and [serde_json](https://crates.io/crates/serde_json) - Serialization/deserialization
- [tokio](https://crates.io/crates/tokio) - Async runtime
- [dotenvy](https://crates.io/crates/dotenvy) - Environment variable management


## Setup

1. Clone the repository
2. Create a .env file with your PostgreSQL connection string:
   ```
   DATABASE_URL=postgres://username:password@localhost/database_name
   MAX_CONNECTIONS=10
   IP=127.0.0.1
   PORT=8080
   WORKERS=4
   JWT_SECRET=your_very_secure_and_long_random_secret_key
   JWT_EXPIRATION_HOURS=24
   ```

## Running the Server

```bash
cargo run
```

The server will start on `127.0.0.1:8080`


